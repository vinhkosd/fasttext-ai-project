import fasttext
import os

print("üöÄ Training FastText v·ªõi Pre-trained Vectors...")

# Ki·ªÉm tra file vectors
pretrained_path = 'models/pretrained/crawl-300d-2M.vec'
use_pretrained = os.path.exists(pretrained_path)

if use_pretrained:
    print("‚úÖ Using pre-trained word vectors")
else:
    print("‚ö†Ô∏è  Training from scratch (no pre-trained vectors)")

# Train model v·ªõi ho·∫∑c kh√¥ng c√≥ pre-trained vectors
if use_pretrained:
    model = fasttext.train_supervised(
        input='data/training_data.txt',
        epoch=50,           # C√≥ th·ªÉ gi·∫£m epoch khi d√πng pre-trained
        lr=0.5,
        wordNgrams=2,
        dim=300,            # Ph·∫£i kh·ªõp v·ªõi dimension c·ªßa pre-trained vectors
        pretrainedVectors=pretrained_path,
        minCount=1,
        minn=2,
        maxn=5,
        verbose=2
    )
else:
    model = fasttext.train_supervised(
        input='data/training_data.txt',
        epoch=100,
        lr=0.5,
        wordNgrams=2,
        dim=100,            # C√≥ th·ªÉ d√πng dimension nh·ªè h∆°n
        minCount=1,
        minn=2,
        maxn=5,
        verbose=2
    )

# L∆∞u model
os.makedirs('models', exist_ok=True)
model.save_model('models/intent_model.bin')
print("‚úÖ Model saved: models/intent_model.bin")

# Test kh·∫£ nƒÉng hi·ªÉu ng·ªØ nghƒ©a
test_cases = [
    "ch√†o b·∫°n",           # Test WELCOME
    "xin ch√†o",           # Test WELCOME  
    "hello",              # Test WELCOME
    "th√¥ng tin c√° nh√¢n",
    "ch·∫•m c√¥ng th√°ng tr∆∞·ªõc",
    "ch·∫•m c√¥ng th√°ng tr∆∞·ªõc tr∆∞·ªõc",
    "ch·∫•m c√¥ng th√°ng tr∆∞·ªõc tr∆∞·ªõc tr∆∞·ªõc",
    "xem l∆∞∆°ng th√°ng n√†y",
    "ch·∫•m c√¥ng h√¥m nay",
    "ki·ªÉm tra c√¥ng th√°ng 8"
]

print(f"\nüß™ Testing Semantic Understanding (Pre-trained: {use_pretrained}):")
for text in test_cases:
    # S·ª≠a l·ªói predict - c√°ch m·ªõi
    predictions = model.predict(text, k=2)
    
    # FastText tr·∫£ v·ªÅ tuple (labels, probabilities)
    labels = predictions[0]
    probabilities = predictions[1]
    
    print(f"üìù '{text}'")
    for i in range(len(labels)):
        intent = labels[i].replace('__label__', '')
        prob = probabilities[i]
        print(f"   ‚Üí {intent}: {prob:.1%}")
    print()